#!/usr/bin/python
# coding: utf-8

"""
@version: Python3
@author: Ann
@contact: 494792590@qq.com
@software: Pycharm
@file: 模拟真实浏览器.py
@time: 2018/12/5 0005 下午 8:05
"""

"""

目的：模拟真实的浏览器发送请求并自带cookie，即不需要在头部中输入cookie
需要引入新的模块 http.cookiejar
注意：所有的操作都是 opener.open()方法去发送请求，因为这里面是带着cookie发送的。

"""
import urllib.request
import urllib.parse
import http.cookiejar

# 创建一个cookiejar对象
cj = http.cookiejar.CookieJar()

# 通过cookiejar创建一个handler
handler = urllib.request.HTTPCookieProcessor(cj)

# 根据handler创建一个opener
opener = urllib.request.build_opener(handler)


post_url = 'http://www.renren.com/ajaxLogin/login?1=1&uniqueTimestamp=20181131944714'

# 表单数据
form_data = {
    'icode': '',
    'key_id': '1',
    'email': '494792590@qq.com',
    'password': 'bd6f116f8977f30ea639400191031d9aef2779c9560b729e84bb6ba54f2ae5c5',
    'rkey': 'fadff523aaff6e83227ac1509d88c752',
    'f': 'http%3A%2F%2Fwww.renren.com%2F284191275%2Fprofile',
    'origURL': '	http://www.renren.com/home',
    'domain': 'renren.com',
    'captcha_type': 'web_login',
}

# 因为有cookiejar，这样就不需要在headers中输入cookie信息了
headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)\
 Chrome/70.0.3538.110 Safari/537.36'}

request = urllib.request.Request(url=post_url, headers=headers)

# 处理表单数据,urllib.parse.urlencode(form_data)只是把数据给拼接好，所以要加上encode()进行编码后发送
form_data = urllib.parse.urlencode(form_data).encode()

response = opener.open(request, data=form_data)
# 至此，就登录成功了

# 然后通过登录个人页面，因为，在登录个人网页的时候，会发送新的request,新的request就会包含个人的Cookie，也就是个人身份标签。
# 下面的get_url就是点击个人页面后的url，如果之前没有登录成功，则就是弹出输入账户密码的页面
get_url = 'http://www.renren.com/284191275/profile'

request = urllib.request.Request(url=get_url, headers=headers)

response_get_url = opener.open(request)
print(response_get_url.read().decode())






















